/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.javagraph;

import java.awt.Dimension;
import java.awt.Toolkit;
import java.util.ArrayList;


//Class qui definié l'écran principal
/**
 * écran 3
 */
public class Screen3 extends javax.swing.JFrame {
    
    private Graph graph;
    
    public static Screen3 sc;
    
    private Node[] selectedNodes = new Node[2];

    /**
     * Creates new form HomeScreen
     */
    public Screen3(Graph graph) {
        if (sc != null) return;
        
        this.graph = graph;
        
        GraphPanel gpanel = new GraphPanel(graph);
        getContentPane().add(gpanel);
        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        setSize(screenSize.width, screenSize.height);
        setVisible(true);
        
        gpanel.setSize(600, 500);
        
        initComponents();
        setExtendedState(javax.swing.JFrame.MAXIMIZED_BOTH); // To maximize a frame
        
        sc = this;
    }
    /** plus court chemin*/
    private void processShortestPath(Node src, Node dest) {
        if (src == null || dest == null) return;
        ArrayList<Node> path = graph.getShortestPathNodes(src, dest);
        String nodesText = "";
        for (Node n : path) {
            nodesText += n.getName()+"\n";
            if (n == src) n.setIsSelected(true);
            else if (n == dest) n.setIsSelected(true);
            else n.setActive();
        }
        pathTextArea.setEditable(false);
        pathTextArea.setText(nodesText);
        String[] words = nodesText.split("\\s");
        ArrayList<String> tab = new ArrayList<>();
        boolean launched = false;
        for (String word : words) {
            if (launched==true){
                tab.add(word);
            }
            launched = true;
        }
        
        for (int i=1;i<tab.size();i++) {
            paintLinkFromRoads(dest,Graph.findNode(tab.get(0),graph.getNodes()));
            paintLinkFromRoads(Graph.findNode(tab.get(i),graph.getNodes()),Graph.findNode(tab.get(i-1),graph.getNodes()));
        }
        
    }
    /**colore la route en vert*/
    private void paintLinkFromRoads(Node src, Node dest){
        Link l = graph.findLinkHavingNodes(src,dest);
        l.setSelected();
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        nodesList = new javax.swing.JComboBox();
        nodesList1 = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        pathTextArea = new javax.swing.JTextArea();
        backBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBounds(new java.awt.Rectangle(0, 0, 1399, 768));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setBackground(new java.awt.Color(51, 51, 255));
        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setText("Plus court chemin");
        jPanel2.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 30, 340, 29));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        jLabel2.setText("Le plus court chemin:");
        jPanel2.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 150, -1, -1));

        nodesList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nodesListActionPerformed(evt);
            }
        });
        for (int i=0; i<graph.getNodes().size(); i++) {
            nodesList.addItem(graph.getNodes().get(i).getName());
        }
        jPanel2.add(nodesList, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 100, 160, 30));

        nodesList1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nodesList1ActionPerformed(evt);
            }
        });
        for (int i=0; i<graph.getNodes().size(); i++) {
            nodesList1.addItem(graph.getNodes().get(i).getName());
        }
        jPanel2.add(nodesList1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 100, 160, 30));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        jLabel4.setText("ville1");
        jPanel2.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 70, -1, -1));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        jLabel5.setText("ville2");
        jPanel2.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 70, -1, -1));

        pathTextArea.setColumns(20);
        pathTextArea.setRows(5);
        jScrollPane1.setViewportView(pathTextArea);

        jPanel2.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 180, 360, 190));

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(970, 40, 420, 580));

        backBtn.setBackground(new java.awt.Color(204, 204, 204));
        backBtn.setText("Back");
        backBtn.setFocusable(false);
        backBtn.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        backBtn.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });
        getContentPane().add(backBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(1290, 10, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents
/**fais le plus court chemin entre ville 1 et ville 2*/
    private void nodesListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nodesListActionPerformed
        // TODO add your handling code here:
        String selectedNode = (String) nodesList.getSelectedItem();
        
        graph.setAllInActive();
        
        Node foundNode = Graph.findNode(selectedNode, graph.getNodes());
        this.selectedNodes[0] = foundNode;
        this.selectedNodes[0].setActive();
        foundNode.setActive();
        if (this.selectedNodes[1] != null) {
            this.selectedNodes[1].setIsSelected(true);
            processShortestPath(this.selectedNodes[0], this.selectedNodes[1]);
        }
        this.repaint();
    }//GEN-LAST:event_nodesListActionPerformed
/**back*/
    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        HomeScreen.hs.setVisible(true);
    }//GEN-LAST:event_backBtnActionPerformed
/**fais le plus court chemin entre ville 1 et ville 2*/
    private void nodesList1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nodesList1ActionPerformed
        // TODO add your handling code here:
        String selectedNode = (String) nodesList1.getSelectedItem();
        
        graph.setAllInActive();
        
        Node foundNode = Graph.findNode(selectedNode, graph.getNodes());
        this.selectedNodes[1] = foundNode;
        this.selectedNodes[1].setActive();
        if (this.selectedNodes[0] != null) {
            this.selectedNodes[0].setIsSelected(true);
            processShortestPath(this.selectedNodes[0], this.selectedNodes[1]);
        }
        
        this.repaint();
    }//GEN-LAST:event_nodesList1ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox nodesList;
    private javax.swing.JComboBox nodesList1;
    private javax.swing.JTextArea pathTextArea;
    // End of variables declaration//GEN-END:variables
}
